[{"D:\\Documents\\Project\\react-movie-project\\src\\index.js":"1","D:\\Documents\\Project\\react-movie-project\\src\\reportWebVitals.js":"2","D:\\Documents\\Project\\react-movie-project\\src\\App.js":"3","D:\\Documents\\Project\\react-movie-project\\src\\pages\\Products.js":"4","D:\\Documents\\Project\\react-movie-project\\src\\pages\\Home.js":"5","D:\\Documents\\Project\\react-movie-project\\src\\pages\\Movies.js":"6","D:\\Documents\\Project\\react-movie-project\\src\\pages\\Contact.js":"7","D:\\Documents\\Project\\react-movie-project\\src\\pages\\MovieDetails.js":"8","D:\\Documents\\Project\\react-movie-project\\src\\layouts\\Default.js":"9","D:\\Documents\\Project\\react-movie-project\\src\\constants.js":"10","D:\\Documents\\Project\\react-movie-project\\src\\components\\carousel\\Carousel.js":"11","D:\\Documents\\Project\\react-movie-project\\src\\components\\example\\Example.js":"12","D:\\Documents\\Project\\react-movie-project\\src\\components\\movie\\MovieGridItem.js":"13","D:\\Documents\\Project\\react-movie-project\\src\\components\\movie\\MovieListItem.js":"14","D:\\Documents\\Project\\react-movie-project\\src\\components\\contact\\ContactForm.js":"15","D:\\Documents\\Project\\react-movie-project\\src\\components\\product\\Product.js":"16","D:\\Documents\\Project\\react-movie-project\\src\\components\\navbar\\Navbar.js":"17","D:\\Documents\\Project\\react-movie-project\\src\\network\\network-client.js":"18","D:\\Documents\\Project\\react-movie-project\\src\\components\\FunctionalComponent.js":"19","D:\\Documents\\Project\\react-movie-project\\src\\components\\ClassComponent.js":"20","D:\\Documents\\Project\\react-movie-project\\src\\pages\\TVSeries.js":"21","D:\\Documents\\Project\\react-movie-project\\src\\redux\\tv\\action-types.js":"22","D:\\Documents\\Project\\react-movie-project\\src\\redux\\movies\\actions.js":"23","D:\\Documents\\Project\\react-movie-project\\src\\redux\\movies\\action-types.js":"24","D:\\Documents\\Project\\react-movie-project\\src\\redux\\tv\\actions.js":"25","D:\\Documents\\Project\\react-movie-project\\src\\redux\\movies\\reducers.js":"26","D:\\Documents\\Project\\react-movie-project\\src\\pages\\TVSeriesDetails.js":"27","D:\\Documents\\Project\\react-movie-project\\src\\redux\\tv\\reducers.js":"28","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\movies\\Filters.js":"29","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\movies\\SelectGenres.js":"30","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\movies\\SelectYear.js":"31","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\tv\\Filters.js":"32","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\tv\\SelectYear.js":"33","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\tv\\SelectGenres.js":"34","D:\\Documents\\Project\\react-movie-project\\src\\components\\tv\\tvGridItem.js":"35","D:\\Documents\\Project\\react-movie-project\\src\\components\\tv\\tvListItem.js":"36","D:\\Documents\\Project\\react-movie-project\\src\\redux\\index.js":"37","D:\\Documents\\Project\\react-movie-project\\src\\redux\\app\\reducers.js":"38","D:\\Documents\\Project\\react-movie-project\\src\\redux\\app\\action-types.js":"39","D:\\Documents\\Project\\react-movie-project\\src\\redux\\app\\actions.js":"40","D:\\Documents\\Project\\react-movie-project\\src\\pages\\Profile.js":"41","D:\\Documents\\Project\\react-movie-project\\src\\components\\profile\\UserProfile.js":"42"},{"size":779,"mtime":1614712371799,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1613742720437,"results":"45","hashOfConfig":"44"},{"size":1499,"mtime":1614880825663,"results":"46","hashOfConfig":"44"},{"size":1042,"mtime":1613742496099,"results":"47","hashOfConfig":"44"},{"size":606,"mtime":1614983893377,"results":"48","hashOfConfig":"44"},{"size":2565,"mtime":1614985968132,"results":"49","hashOfConfig":"44"},{"size":270,"mtime":1613742495971,"results":"50","hashOfConfig":"44"},{"size":1894,"mtime":1614636699961,"results":"51","hashOfConfig":"44"},{"size":243,"mtime":1613742475085,"results":"52","hashOfConfig":"44"},{"size":308,"mtime":1613745961634,"results":"53","hashOfConfig":"44"},{"size":2024,"mtime":1614615690798,"results":"54","hashOfConfig":"44"},{"size":726,"mtime":1613742410312,"results":"55","hashOfConfig":"44"},{"size":994,"mtime":1614986895700,"results":"56","hashOfConfig":"44"},{"size":1200,"mtime":1614637750116,"results":"57","hashOfConfig":"44"},{"size":1229,"mtime":1614987176285,"results":"58","hashOfConfig":"44"},{"size":578,"mtime":1613742324638,"results":"59","hashOfConfig":"44"},{"size":1443,"mtime":1614984830838,"results":"60","hashOfConfig":"44"},{"size":1701,"mtime":1613742484916,"results":"61","hashOfConfig":"44"},{"size":1596,"mtime":1613742307215,"results":"62","hashOfConfig":"44"},{"size":821,"mtime":1613742307173,"results":"63","hashOfConfig":"44"},{"size":2503,"mtime":1614987070961,"results":"64","hashOfConfig":"44"},{"size":229,"mtime":1614719925279,"results":"65","hashOfConfig":"44"},{"size":1407,"mtime":1614719685457,"results":"66","hashOfConfig":"44"},{"size":231,"mtime":1614719788734,"results":"67","hashOfConfig":"44"},{"size":1394,"mtime":1614719987295,"results":"68","hashOfConfig":"44"},{"size":1338,"mtime":1614719623352,"results":"69","hashOfConfig":"44"},{"size":1853,"mtime":1614723588798,"results":"70","hashOfConfig":"44"},{"size":1335,"mtime":1614720025646,"results":"71","hashOfConfig":"44"},{"size":1394,"mtime":1614985720921,"results":"72","hashOfConfig":"44"},{"size":2227,"mtime":1614720242404,"results":"73","hashOfConfig":"44"},{"size":1075,"mtime":1614720132260,"results":"74","hashOfConfig":"44"},{"size":1305,"mtime":1614722456827,"results":"75","hashOfConfig":"44"},{"size":1067,"mtime":1614720137846,"results":"76","hashOfConfig":"44"},{"size":2215,"mtime":1614720212785,"results":"77","hashOfConfig":"44"},{"size":991,"mtime":1614987009481,"results":"78","hashOfConfig":"44"},{"size":1197,"mtime":1614724933750,"results":"79","hashOfConfig":"44"},{"size":201,"mtime":1614713050956,"results":"80","hashOfConfig":"44"},{"size":327,"mtime":1614719634753,"results":"81","hashOfConfig":"44"},{"size":87,"mtime":1614719798719,"results":"82","hashOfConfig":"44"},{"size":134,"mtime":1614724645314,"results":"83","hashOfConfig":"44"},{"size":868,"mtime":1614898120615,"results":"84","hashOfConfig":"44"},{"size":1214,"mtime":1614984244500,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1nym33i",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\Project\\react-movie-project\\src\\index.js",[],["179","180"],"D:\\Documents\\Project\\react-movie-project\\src\\reportWebVitals.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\App.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\Products.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\Home.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\Movies.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\Contact.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\MovieDetails.js",["181"],"import React, {useEffect} from 'react';\nimport {\n    useParams\n  } from \"react-router-dom\";\n\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getMovie, setMovie} from '../redux/movies/actions';\nimport {\n    Card, \n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    CardSubtitle,\n  } from 'reactstrap';\nimport constants from '../constants';\n\nfunction MovieDetails(props) {\n\n    const movie = useSelector(state => state.movie);\n    const dispatch = useDispatch();\n    const { id } = useParams();\n   \n    // Equivalent to componentDidMount\n    useEffect(()=>{\n        dispatch(getMovie({\n            movieId: id\n        }))\n\n        //Equivalent to componentWillUnmount\n        return () => {\n            dispatch(setMovie({}))\n        }\n    },[])\n\n    const getMovieImage = () => {\n        if(!movie.poster_path){\n          return null;\n        }\n        return <CardImg \n          top \n          width=\"100%\" \n          src={`${constants.posterPath}${movie.poster_path}`} \n        />\n      }\n    return <>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                <Card className=\"mb-3\">\n                    <div className=\"row\">\n                    <div className=\"col-3\">\n                        {getMovieImage()}\n                    </div>\n                    <div className=\"col\">\n                        <CardBody>\n                            <CardTitle tag=\"h5\" className=\"text-truncate\">{movie.title}</CardTitle>\n                            <CardSubtitle>{movie.release_date}</CardSubtitle>\n                            <CardText className=\"movie-description\">{movie.overview}</CardText>\n                        </CardBody>\n                    </div>\n                    </div>\n                </Card>\n                </div>\n            </div>\n        </div>\n   \n    </>\n}\nexport default MovieDetails;","D:\\Documents\\Project\\react-movie-project\\src\\layouts\\Default.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\constants.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\carousel\\Carousel.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\example\\Example.js",[],["182","183"],"D:\\Documents\\Project\\react-movie-project\\src\\components\\movie\\MovieGridItem.js",["184"],"D:\\Documents\\Project\\react-movie-project\\src\\components\\movie\\MovieListItem.js",["185"],"import {\n    Card, \n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    Button,\n  } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport constants from '../../constants';\n\nconst MovieListItem = props => {\n\n    const getMovieImage = () => {\n      if(!props.poster_path){\n        return null;\n      }\n      return <CardImg \n        top \n        width=\"100%\" \n        src={`${constants.posterPath}${props.poster_path}`} \n      />\n    }\n\n    return (\n      <div className=\"col-12\">\n          <Card className=\"mb-3\">\n            <div className=\"row\">\n              <div className=\"col-3\">\n                {getMovieImage()}\n              </div>\n              <div className=\"col\">\n                <CardBody>\n                  <CardTitle tag=\"h5\" className=\"movie-title text-truncate\">{props.title}</CardTitle>\n                  <CardText className=\"movie-description\">{props.overview}</CardText>\n                  <Link to={`/movie/${props.id}`} className=\"btn btn-secondary\">\n                      Детайли\n                  </Link>\n                </CardBody>\n              </div>\n            </div>\n          </Card>\n      </div>\n    );\n  };\n  \nexport default MovieListItem;\n  ","D:\\Documents\\Project\\react-movie-project\\src\\components\\contact\\ContactForm.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\product\\Product.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\navbar\\Navbar.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\network\\network-client.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\FunctionalComponent.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\ClassComponent.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\TVSeries.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\tv\\action-types.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\movies\\actions.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\movies\\action-types.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\tv\\actions.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\movies\\reducers.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\TVSeriesDetails.js",["186"],"import React, {useEffect} from 'react';\nimport {\n    useParams\n  } from \"react-router-dom\";\n\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getTV, setTV} from '../redux/tv/actions';\nimport {\n    Card, \n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    CardSubtitle,\n  } from 'reactstrap';\nimport constants from '../constants';\n\nfunction TVSeriesDetails(props) {\n\n    const tv = useSelector(state => state.tv);\n    const dispatch = useDispatch();\n    const { id } = useParams();\n   \n    // Equivalent to componentDidMount\n    useEffect(()=>{\n        dispatch(getTV({\n            tvId: id\n        }))\n\n        //Equivalent to componentWillUnmount\n        return () => {\n            dispatch(setTV({}))\n        }\n    },[])\n\n    const getTVImage = () => {\n        if(!tv.poster_path){\n          return null;\n        }\n        return <CardImg \n          top \n          width=\"100%\" \n          src={`${constants.posterPath}${tv.poster_path}`} \n        />\n      }\n    return <>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                <Card className=\"mb-3\">\n                    <div className=\"row\">\n                    <div className=\"col-3\">\n                        {getTVImage()}\n                    </div>\n                    <div className=\"col\">\n                        <CardBody>\n                            <CardTitle tag=\"h5\" className=\"text-truncate\">{tv.name}</CardTitle>\n                            <CardSubtitle>{tv.release_date}</CardSubtitle>\n                            <CardText className=\"movie-description\">{tv.overview}</CardText>\n                        </CardBody>\n                    </div>\n                    </div>\n                </Card>\n                </div>\n            </div>\n        </div>\n   \n    </>\n}\nexport default TVSeriesDetails;","D:\\Documents\\Project\\react-movie-project\\src\\redux\\tv\\reducers.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\movies\\Filters.js",["187"],"D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\movies\\SelectGenres.js",["188"],"import React, { useEffect } from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGenres, setSelectedGenres } from '../../../redux/movies/actions';\nimport { createSelector } from 'reselect';\nconst SelectGenres = (props) => {\n\n    const dispatch = useDispatch();\n\n    const genres = useSelector(state => state.movies.genres);\n\n    useEffect(() => {\n        dispatch(getGenres({\n            language: 'bg-BG',\n        }));\n    }, []);\n\n    const selectedFilters = useSelector(state => state.movies.selectedFilters)\n\n    const inputOnChange = (event) => {\n        const isChecked = event.target.checked;\n        const genreId = event.target.value;\n        let currentGenres = selectedFilters.selectedGenres;\n        console.log('inputOnChange', isChecked, genreId);\n        if(isChecked){\n            currentGenres.push(genreId);\n        }else {\n            currentGenres = currentGenres.filter(id => id !== genreId);\n        }\n        dispatch(setSelectedGenres(currentGenres));\n    }\n\n    const getId = (_, id) => id;\n    const getSelectedGenres = state => state.selectedGenres;\n\n    const isGenreSelected = createSelector(\n        getSelectedGenres,\n        getId,\n        (genres, id) => {\n            return genres.includes(id)\n        }\n    )\n\n    const isChecked = (genreId) => {\n        const isChecked = isGenreSelected(selectedFilters, genreId);\n        return isChecked;\n    }\n\n    const getGenresCheckboxes = () => {\n        const genresCheckboxes = genres.map(genre => {\n            return <FormGroup check inline key={genre.id}>\n                <Label check>\n                    <Input type=\"checkbox\" \n                    checked={isChecked(genre.id.toString())} \n                    value={genre.id}\n                    onChange={inputOnChange}/> \n                    {genre.name}\n                </Label>\n            </FormGroup>\n        })\n        return genresCheckboxes;\n    }\n\n    return (\n        <FormGroup>\n            <Label className=\"genre-label\">Избери жанр</Label>\n            <div>\n                {getGenresCheckboxes()}\n            </div>\n        </FormGroup>\n       \n    );\n}\n\nexport default SelectGenres;","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\movies\\SelectYear.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\tv\\Filters.js",["189"],"import React, {useEffect} from 'react';\nimport SelectYear from './SelectYear';\nimport SelectGenres from './SelectGenres';\nimport {Button} from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTVSeries } from '../../../redux/tv/actions';\n\nconst Filters = (props) => {\n\n    const selectedYear = useSelector(state => state.tv.selectedFilters.selectedYear);\n    const selectedGenres = useSelector(state => state.tv.selectedFilters.selectedGenres);\n\n    const dispatch = useDispatch();\n    \n    const loadTVSeries = () => {\n        dispatch(getTVSeries({\n            year: selectedYear,\n            page: 1,\n            with_genres: selectedGenres.toString(),\n        }));\n    }\n\n    useEffect(() => {\n        loadTVSeries();\n    }, []);\n\n    \n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <SelectYear/>\n                </div>\n                <div className=\"col-md-4\">\n                    <SelectGenres/>\n                </div>\n            </div>\n            <div className=\"row mb-3\">\n                <div className=\"col\">\n                    <Button color=\"secondary\" onClick={loadTVSeries}>Търси</Button>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Filters;","D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\tv\\SelectYear.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\filters\\tv\\SelectGenres.js",["190"],"import React, { useEffect } from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGenres, setSelectedGenres } from '../../../redux/tv/actions';\nimport { createSelector } from 'reselect';\nconst SelectGenres = (props) => {\n\n    const dispatch = useDispatch();\n\n    const genres = useSelector(state => state.tv.genres);\n\n    useEffect(() => {\n        dispatch(getGenres({\n            language: 'bg-BG',\n        }));\n    }, []);\n\n    const selectedFilters = useSelector(state => state.tv.selectedFilters)\n\n    const inputOnChange = (event) => {\n        const isChecked = event.target.checked;\n        const genreId = event.target.value;\n        let currentGenres = selectedFilters.selectedGenres;\n        console.log('inputOnChange', isChecked, genreId);\n        if(isChecked){\n            currentGenres.push(genreId);\n        }else {\n            currentGenres = currentGenres.filter(id => id !== genreId);\n        }\n        dispatch(setSelectedGenres(currentGenres));\n    }\n\n    const getId = (_, id) => id;\n    const getSelectedGenres = state => state.selectedGenres;\n\n    const isGenreSelected = createSelector(\n        getSelectedGenres,\n        getId,\n        (genres, id) => {\n            return genres.includes(id)\n        }\n    )\n\n    const isChecked = (genreId) => {\n        const isChecked = isGenreSelected(selectedFilters, genreId);\n        return isChecked;\n    }\n\n    const getGenresCheckboxes = () => {\n        const genresCheckboxes = genres.map(genre => {\n            return <FormGroup check inline key={genre.id}>\n                <Label check>\n                    <Input type=\"checkbox\" \n                    checked={isChecked(genre.id.toString())} \n                    value={genre.id}\n                    onChange={inputOnChange}/> \n                    {genre.name}\n                </Label>\n            </FormGroup>\n        })\n        return genresCheckboxes;\n    }\n\n    return (\n        <FormGroup>\n            <Label className=\"genre-label\">Избери жанр</Label>\n            <div>\n                {getGenresCheckboxes()}\n            </div>\n        </FormGroup>\n       \n    );\n}\n\nexport default SelectGenres;","D:\\Documents\\Project\\react-movie-project\\src\\components\\tv\\tvGridItem.js",["191"],"D:\\Documents\\Project\\react-movie-project\\src\\components\\tv\\tvListItem.js",["192"],"import {\n    Card, \n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    Button,\n  } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport constants from '../../constants';\n\nconst tvListItem = props => {\n\n    const getTVSeriesImage = () => {\n      if(!props.poster_path){\n        return null;\n      }\n      return <CardImg \n        top \n        width=\"100%\" \n        src={`${constants.posterPath}${props.poster_path}`} \n      />\n    }\n\n    return (\n      <div className=\"col-12\">\n          <Card className=\"mb-3\">\n            <div className=\"row\">\n              <div className=\"col-3\">\n                {getTVSeriesImage()}\n              </div>\n              <div className=\"col\">\n                <CardBody>\n                  <CardTitle tag=\"h5\" className=\"movie-title text-truncate\">{props.title}</CardTitle>\n                  <CardText className=\"movie-description\">{props.overview}</CardText>\n                  <Link to={`/tv/${props.id}`} className=\"btn btn-secondary\">\n                      Детайли\n                  </Link>\n                </CardBody>\n              </div>\n            </div>\n          </Card>\n      </div>\n    );\n  };\n  \nexport default tvListItem;\n  ","D:\\Documents\\Project\\react-movie-project\\src\\redux\\index.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\app\\reducers.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\app\\action-types.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\redux\\app\\actions.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\pages\\Profile.js",[],"D:\\Documents\\Project\\react-movie-project\\src\\components\\profile\\UserProfile.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":34,"column":7,"nodeType":"199","endLine":34,"endColumn":9,"suggestions":"200"},{"ruleId":"193","replacedBy":"201"},{"ruleId":"195","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":11},{"ruleId":"203","severity":1,"message":"204","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":11},{"ruleId":"197","severity":1,"message":"198","line":34,"column":7,"nodeType":"199","endLine":34,"endColumn":9,"suggestions":"207"},{"ruleId":"197","severity":1,"message":"208","line":25,"column":8,"nodeType":"199","endLine":25,"endColumn":10,"suggestions":"209"},{"ruleId":"197","severity":1,"message":"210","line":16,"column":8,"nodeType":"199","endLine":16,"endColumn":10,"suggestions":"211"},{"ruleId":"197","severity":1,"message":"212","line":25,"column":8,"nodeType":"199","endLine":25,"endColumn":10,"suggestions":"213"},{"ruleId":"197","severity":1,"message":"210","line":16,"column":8,"nodeType":"199","endLine":16,"endColumn":10,"suggestions":"214"},{"ruleId":"203","severity":1,"message":"204","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":11},{"ruleId":"203","severity":1,"message":"204","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":11},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["217"],["215"],["216"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["218"],"React Hook useEffect has a missing dependency: 'loadMovies'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has a missing dependency: 'loadTVSeries'. Either include it or remove the dependency array.",["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"228","fix":"232"},"Update the dependencies array to be: [dispatch, id]",{"range":"233","text":"234"},{"range":"235","text":"234"},"Update the dependencies array to be: [loadMovies]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch]",{"range":"238","text":"239"},"Update the dependencies array to be: [loadTVSeries]",{"range":"240","text":"241"},{"range":"242","text":"239"},[763,765],"[dispatch, id]",[741,743],[765,767],"[loadMovies]",[510,512],"[dispatch]",[761,763],"[loadTVSeries]",[502,504]]